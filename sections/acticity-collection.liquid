{{ 'section-acticity-collection.css' | asset_url | stylesheet_tag }}

<div id="section-{{ section.id }}" class="acticity-collection padding-sider">
  <div class="acticity-collection-tab_box">
    {%- for block in section.blocks -%}
      <div
        class="acticity-collection-tab_btn{% if forloop.index == 1 %} active{% endif %}"
        data-type="{{ block.settings.collection.handle }}"
      >
        {{ block.settings.collection.title }}
        <div class="acticity-collection-tab_count">{{ block.settings.collection.products_count }}</div>
      </div>
    {%- endfor %}
  </div>
  <div id="product-container">
    {% assign first_collection_handle = section.blocks[0].settings.collection.handle %}
    {% paginate collections[first_collection_handle].products by 8 %}
      <div id="product-list" class="product-grid">
        {% for product in collections[first_collection_handle].products %}
          <div class="product-item" data-type="{{ product.type | handleize }}">
            <div class="product-image">
              <img src="{{ product.featured_media | image_url }}" alt="{{ product.title }}">
              <a href="{{ product.url }}" class="product-btn">{{- 'shopping.svg' | inline_asset_content -}}</a>
            </div>
            <div class="product-info">
              <div class="product-desc">{{ product.description | truncate: 45 }}</div>
              <div class="flex-center">
                <h3 class="product-title">
                  <a href="{{ product.url }}">{{ product.title }}</a>
                </h3>
              </div>
              <div class="product-price">{{ product.price | money }}</div>
            </div>
          </div>
        {% endfor %}
      </div>

      {% if paginate.pages > 1 %}
        <div class="custom-pagination">
          {% if paginate.previous %}
            <a href="{{ paginate.previous.url }}" class="ajax-pagination prev">
              {{- 'arrow-left.svg' | inline_asset_content -}}
            </a>
          {% endif %}

          {% for i in (1..paginate.pages) %}
            {% if i == paginate.current_page %}
              <span class="current-page page">{{ i }}</span>
            {% else %}
              <a
                href="{{ request.path }}?page={{ i }}"
                class="ajax-pagination page"
                data-page="{{ i }}"
              >
                {{ i }}
              </a>
            {% endif %}
          {% endfor %}

          {% if paginate.next %}
            <a href="{{ paginate.next.url }}" class="ajax-pagination next">
              {{- 'arrow-right.svg' | inline_asset_content -}}
            </a>
          {% endif %}
        </div>
      {% endif %}
    {% endpaginate %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let currentType = document.querySelector('.acticity-collection-tab_btn.active').getAttribute('data-type');

    function bindPaginationLinks() {
      document.querySelectorAll('.ajax-pagination.page').forEach(function (link) {
        link.addEventListener('click', function (event) {
          event.preventDefault();
          const page = this.getAttribute('data-page');

          let url = `/collections/${currentType}?page=${page}`;

          fetchProducts(url);
        });
      });

      document.querySelectorAll('.ajax-pagination.prev, .ajax-pagination.next').forEach(function (btn) {
        btn.addEventListener('click', function (event) {
          event.preventDefault();
          const url = this.getAttribute('href');
          fetchProducts(url);
        });
      });
    }

    function fetchProducts(url) {
      fetch(url)
        .then((response) => response.text())
        .then((data) => {
          const parser = new DOMParser();
          const html = parser.parseFromString(data, 'text/html');

          document.querySelector('.product-grid').innerHTML = html.querySelector('.product-grid')?.innerHTML || '';
          document.querySelector('.custom-pagination').innerHTML =
            html.querySelector('.custom-pagination')?.innerHTML || '';

          bindPaginationLinks();

          document.querySelectorAll('.ajax-pagination.page').forEach(function (link) {
            let page = link.getAttribute('data-page');
            let newHref = `/collections/${currentType}?page=${page}`;

            link.setAttribute('href', newHref);
          });
        });
    }

    function bindCategoryFilters() {
      document.querySelectorAll('.acticity-collection-tab_btn').forEach(function (btn) {
        btn.addEventListener('click', function (event) {
          event.preventDefault();

          document.querySelectorAll('.acticity-collection-tab_btn').forEach((el) => el.classList.remove('active'));
          this.classList.add('active');

          currentType = this.getAttribute('data-type');

          let url = `/collections/${currentType}?page=1`;

          fetchProducts(url);
        });
      });
    }

    bindPaginationLinks();
    bindCategoryFilters();
  });
</script>

{% schema %}
{
  "name": "acticity collection",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [],
  "blocks": [
    {
      "type": "acticity_collection",
      "name": "acticity_collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "choose products"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "acticity collection",
      "blocks": [
        {
          "type": "acticity_collection"
        }
      ]
    }
  ]
}
{% endschema %}

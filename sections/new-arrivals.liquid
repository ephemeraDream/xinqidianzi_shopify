{{ 'section-new-arrivals.css' | asset_url | stylesheet_tag }}

<div id="section-{{ section.id }}" class="new-arrivals padding-sider">
  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when 'heading' -%}
        <h2 class="new-arrivals-heading">
          {{ block.settings.heading }}
        </h2>
    {%- endcase -%}
  {%- endfor -%}

  <div class="new-arrivals-contain">
    {% for product in section.settings.collection.products limit: 3 %}
      <div class="product-card">
        <a href="{{ product.url }}">
          <div class="product-image">
            <img src="{{ product.featured_media | image_url }}" alt="{{ product.title }}">
            <form method="post" action="/cart/add">
              <input
                type="hidden"
                name="id"
                value="{{ product.selected_or_first_available_variant.id }}"
              >
              <input
                type="hidden"
                name="quantity"
                value="1"
              >
              <button class="product-btn" type="submit">
                {{- 'shopping.svg' | inline_asset_content -}}
              </button>
            </form>
            {% comment %} <a href="{{ product.url }}" class="product-btn">{{- 'shopping.svg' | inline_asset_content -}}</a> {% endcomment %}
          </div>
        </a>
        <div class="product-info">
          <h4 class="product-title">
            <a href="{{ product.url }}">{{ product.title }}</a>
          </h4>
          <div class="product-price h5_28">{{ product.price | money }}</div>
        </div>
      </div>
    {% endfor %}
  </div>

  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when 'buttons' -%}
        <div class="new-arrivals-button xq_btn_36">
          {%- if block.settings.button_label != blank -%}
            <a href="{{ block.settings.button_link }}">
              {{- block.settings.button_label | escape -}}
            </a>
          {%- endif -%}
        </div>
    {%- endcase -%}
  {%- endfor -%}
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {

    bindAddToCartForm();

    function bindAddToCartForm() {
      const addToCartForms = document.querySelectorAll('form[action="/cart/add"]');
      addToCartForms.forEach(function (form) {
        form.addEventListener('submit', function (event) {
          event.preventDefault();
          const cart = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
          const formData = new FormData(form);
          const config = fetchConfig('javascript');
          config.headers['X-Requested-With'] = 'XMLHttpRequest';
          delete config.headers['Content-Type'];
          if (cart) {
            formData.append(
              'sections',
              cart.getSectionsToRender().map((section) => section.id)
            );
            formData.append('sections_url', window.location.pathname);
            cart.setActiveElement(document.activeElement);
          }
          config.body = formData;
          fetch(`${routes.cart_add_url}`, config)
            .then((response) => response.json())
            .then((response) => {
              let error = null;
              if (response.status) {
                publish(PUB_SUB_EVENTS.cartError, {
                  source: 'product-form',
                  productVariantId: formData.get('id'),
                  errors: response.errors || response.description,
                  message: response.message,
                });
                error = true;
                alert(response.message);
                return;
              }

              if (!error)
                publish(PUB_SUB_EVENTS.cartUpdate, {
                  source: 'product-form',
                  productVariantId: formData.get('id'),
                  cartData: response,
                });
              error = false;
              cart.renderContents(response);
            })
            .catch((e) => {
              console.error(e);
            })
            .finally(() => {
              if (cart && cart.classList.contains('is-empty')) cart.classList.remove('is-empty');
            });
        });
      });
    }
  });
</script>
{% schema %}
{
  "name": "new arrivals",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "choose products"
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "heading",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "label": "heading"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "button",
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "label": "button label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "button link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "new arrivals",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "buttons"
        }
      ]
    }
  ]
}
{% endschema %}
